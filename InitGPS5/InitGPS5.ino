//UBLOX initializer using Attiny84
//Vitezslav Dostal | started 04.07.2019

#define serbaud 9600
#define sertx 5
#define serrx 4
#define gpsbaudh 9600
#define gpsbaudl 4800
#define gpstx 9
#define gpsrx 10
#define button1 7
#define button2 8
#define second 5

#include <SoftwareSerial.h>
SoftwareSerial ublox(gpsrx, gpstx);
SoftwareSerial serial(serrx, sertx);

unsigned char data1[] = {
  0xB5, 0x62, 0x06, 0x00, 0x14, 0x00, 0x01, 0x00, 0x00, 0x00, 0xD0, 0x08, 0x00, 0x00, 0xC0, 0x12,   //4800 baud
  0x00, 0x00, 0x07, 0x00, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0xCF, 0xE4
};
unsigned char data2[] = {
  0xB5, 0x62, 0x06, 0x00, 0x14, 0x00, 0x01, 0x00, 0x00, 0x00, 0xD0, 0x08, 0x00, 0x00, 0x80, 0x25,   //9600 baud
  0x00, 0x00, 0x07, 0x00, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0xA2, 0xB5
};
unsigned char data3[] = {
  0xB5, 0x62, 0x06, 0x01, 0x08, 0x00, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x24,   //GxGGA off
  0xB5, 0x62, 0x06, 0x01, 0x08, 0x00, 0xF0, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x01, 0x2B,   //GxGLL off
  0xB5, 0x62, 0x06, 0x01, 0x08, 0x00, 0xF0, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x02, 0x32,   //GxGSA off
  0xB5, 0x62, 0x06, 0x01, 0x08, 0x00, 0xF0, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x03, 0x39,   //GxGSV off
  0xB5, 0x62, 0x06, 0x01, 0x08, 0x00, 0xF0, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x04, 0x40,   //GxRMC off
  0xB5, 0x62, 0x06, 0x01, 0x08, 0x00, 0xF0, 0x05, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x05, 0x47,   //GxVTG off
  0xB5, 0x62, 0x06, 0x01, 0x08, 0x00, 0x01, 0x07, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x18, 0xE1,   //NAV-PVT on
};
unsigned char data4[] = {
  0xB5, 0x62, 0x06, 0x3E, 0x3C, 0x00, 0x00, 0x00, 0x20, 0x07, 0x00, 0x08, 0x10, 0x00, 0x01, 0x00,   //Galileo on
  0x01, 0x01, 0x01, 0x01, 0x03, 0x00, 0x01, 0x00, 0x01, 0x01, 0x02, 0x04, 0x08, 0x00, 0x01, 0x00,
  0x01, 0x01, 0x03, 0x08, 0x10, 0x00, 0x00, 0x00, 0x01, 0x01, 0x04, 0x00, 0x08, 0x00, 0x00, 0x00,
  0x01, 0x01, 0x05, 0x00, 0x03, 0x00, 0x01, 0x00, 0x01, 0x01, 0x06, 0x08, 0x0E, 0x00, 0x01, 0x00,
  0x01, 0x01, 0x30, 0xAD
};
unsigned char data5[] = {
  0xB5, 0x62, 0x06, 0x09, 0x0D, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00,   //Save flash
  0x00, 0x00, 0x17, 0x31, 0xBF
};
unsigned char data6[] = {
  0xB5, 0x62, 0x02, 0x41, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00    //Sleep now
};
unsigned char data7[] = {
  0xB5, 0x62, 0x06, 0x11, 0x02, 0x00, 0x48, 0x01, 0x62, 0x12                                        //Receiver mgmt pwr save
};
unsigned char data8[] = {
  0xB5, 0x62, 0x06, 0x11, 0x02, 0x00, 0x48, 0x00, 0x61, 0x11                                        //Receiver mgmt continous
};

void baud4800() {
  for (int i = 0; i < sizeof(data1); i++) {
    serial.write(data1[i]);
    ublox.write(data1[i]);
    delay(5);
  }
  serial.println();
}

void baud9600() {
  for (int i = 0; i < sizeof(data2); i++) {
    serial.write(data2[i]);
    ublox.write(data2[i]);
    delay(5);
  }
  serial.println();
}

void messages() {

  for (int i = 0; i < sizeof(data3); i++) {
    serial.write(data3[i]);
    ublox.write(data3[i]);
    delay(5);
  }
  serial.println();
}

void galileo() {
  for (int i = 0; i < sizeof(data4); i++) {
    serial.write(data4[i]);
    ublox.write(data4[i]);
    delay(5);
  }
  serial.println();
}

void save() {
  for (int i = 0; i < sizeof(data5); i++) {
    serial.write(data5[i]);
    ublox.write(data5[i]);
    delay(5);
  }
  serial.println();
}

void sleep()
{
  unsigned long num = second * 1000;
  memcpy(&data6[6], &num, 4);
  setChecksum(data6, sizeof(data6));
  for (int i = 0; i < sizeof(data6); i++) {
    serial.write(data6[i]);
    ublox.write(data6[i]);
    delay(5);
  }
}

void powersaving() {
  for (int i = 0; i < sizeof(data7); i++) {
    serial.write(data7[i]);
    ublox.write(data7[i]);
    delay(5);
  }
  serial.println();
}

void continuous() {
  for (int i = 0; i < sizeof(data8); i++) {
    serial.write(data8[i]);
    ublox.write(data8[i]);
    delay(5);
  }
  serial.println();
}

void setChecksum(unsigned char* data, int length) {
  data[length - 2] = 0;
  data[length - 1] = 0;
  for (int i = 2; i < length - 2; i++) {
    data[length - 2] += data[i];
    data[length - 1] += data[length - 2];
  }
}

void setup() {
  pinMode(button1, INPUT);
  pinMode(button2, INPUT);
  serial.begin(serbaud);
  serial.println();
}

void loop() {
  delay(5);

  if (digitalRead(button1) == LOW)
  {
    ublox.begin(gpsbaudl);
    baud9600();
    ublox.end();

    ublox.begin(gpsbaudh);
    save();
    sleep();
    ublox.end();

    delay(2000);
  }

  if (digitalRead(button2) == LOW)
  {
    ublox.begin(gpsbaudh);
    messages();
    galileo();
    continuous();
    save();
    sleep();
    ublox.end();

    delay(2000);
  }
}
